var cheerio = require('cheerio');
var hljs = require("highlight.js");
var log = console.log;

var reg_toc_id = /^t(\d+(?:\-\d+)*)?\_(.+)$/;

module.exports = toc

function toc(str,cb){

    var option = {}
    $ = cheerio.load(str)

    // 代码高亮使用 highlight.js 
    // 网站 http://adilapapaya.com/docs/highlight.js/#nodejs
    // 官网 https://highlightjs.org/
    $('pre code').each(function(i, e) {
        var htstr,el = $(this),lang = el.attr('class');
        lang = lang?lang.replace('lang-',''):'';
        if(lang){
            try{
                htstr = hljs.highlight(lang,$(this).text()).value;
            }catch(e){
                htstr = $(this).text();
            }
            $(this).html(htstr);
        }
    });

    var $titles = $('h1,h2,h3,h4,h5,h6').filter(function(i) {
        return !$(this).parent().length;
    });

    // 1. markd模块 中文标题生成 ID bug；
    // 2. 序列号一个导航菜单
    tocCreate($titles.attr('id',function(idx,elm){
        return ('t'+'_'+$(this).text()).replace(/\s+/g, "+").replace(/&([^;]+);/g, "_$1_").replace(/\(/g, "%28").replace(/\)/g, "%29");
    }).map(function(idx,itm){
        return {
            title:$(itm).text(),
            tag:$(itm).get(0).tagName.replace(/^(h)/g,''),
            id:$(itm).attr('id'),
            el:itm
        }
    }), function(op){
        option.toc = op.tocHTML;
        option.tocJSON = op.tocJSON;
    });
    $titles.each(function(i){
        $(this).html($(this).html() + ' <a href="#'+ $(this).attr('id') +'"> # </a>')
    })

    //github 中的任务列表增强
    $('ul li').each(function(idx,el){
        var txt = $(this).html();
        var chtml = '';
        if(/^(\[x\])/.test(txt)){
            chtml = 'checked="checked"';
        }else if(/^(\[\ \])/.test(txt)){
            chtml = '';
        };

        if(/^(\[x\]|\[\ \])/.test(txt)){
            txt = txt.replace(/^(\[x\]|\[\ \])/g,'')
            $(this).html('').prepend('<input type="checkbox" class="task-list-item-checkbox" '+ chtml +' disabled="disabled">'+txt)
            $(this).addClass('task-list-item').parent().addClass('task-list-item');
        };

    });
    // 回调返回 菜单静态页面
    cb&&cb(option);
    // 返回HTML
    return $.html();
}

// 树形菜单 - 序列化成JSON，生成 HTML
// tocJSON 返回toc的JSON
// tocHTML 返回toc的HTML静态页面
function tocCreate(arr,cb){
    // console.log("message:arr",arr);
    var newArr = []
    for (var i = 0; i < arr.length; i++) {
        if(i===0) newArr.push(arr[i]);
        else{
           newArr = pushArr(newArr,arr[i])
        }
    };
    if (newArr.length == 1) {
        $(newArr[0].el).attr('id', tocAnchorIdAppend(newArr[0].id, 0));
    }
    var html = tocCreatHTML(newArr);
    cb&&cb({
        tocJSON:newArr,
        tocHTML:html
    });
}

// 树形菜单 - 序列化成JSON
function pushArr(_group,_new){
    var i = _group.length-1
    var last = _group[i]
    var tag = last.tag
    if(tag === _new.tag || tag > _new.tag){
        $(last.el).attr('id', tocAnchorIdAppend(last.id, i));
        $(_new.el).attr('id', tocAnchorIdAppend(_new.id, i + 1));
        _group.push(_new)
    }else{
        var parentId = tocAnchorIdAppend(last.id, i);
        var parentIdx = tocAnchorIdx(
            parentId
        ) || 0;
        _new.id = tocAnchorIdReplace(_new.id, parentIdx);
        if(last.submenu){
            pushArr(last.submenu,_new);
        }else{
            $(_new.el).attr('id', tocAnchorIdAppend(_new.id, 0));
            last.submenu = [];
            last.submenu.push(_new);
        }
    }
    return _group;
}

// 标题锚点 id
function tocAnchorIdAppend(oldId, newIdx) {
    var idx = tocAnchorIdx(oldId);
    newIdx = tocAnchorIdx(newIdx);
    var idxArr = [];
    idx.length && idxArr.push(idx);
    newIdx.length && idxArr.push(newIdx);
    idx = idxArr.join("-");
    var newId = oldId + '';
    if (idx.length) {
        newId = newId.replace(reg_toc_id, "t" + idx + '_$2');
    }
    return newId;
}

function tocAnchorIdReplace(oldId, newIdx) {
    newIdx = tocAnchorIdx(newIdx);
    var newId = oldId + '';
    newId = newId.replace(reg_toc_id, "t" + newIdx + '_$2');
    return newId;
}

function tocAnchorIdx(id) {
    if (id == null) {
        id = '';
    } else {
        id += '';
    }
    var idx = id.replace(reg_toc_id, "$1");
    return idx;
}

// 树形菜单 - 生成HTML
function tocCreatHTML(arr){
    // console.log("arr:",arr);
    var str = '<ul>';
    for (var i = 0; i < arr.length; i++) {
        toc_num = (i+1);
        str += '<li><a href="#' + $(arr[i].el).attr('id') +'">' + arr[i].title + '</a>';
        if(arr[i].submenu){
           str += tocCreatHTML(arr[i].submenu);
        }
        str += '</li>';
    };
    str += '</ul>';
    return str;
}